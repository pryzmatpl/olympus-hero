server {
    server_name mythicalhero.me;
    # Reverse proxy for frontend application running on port 9001                                                                                                                                      
    location / {
        proxy_pass http://localhost:9001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Backend server - Listening on port 9002                                                                                                                                                                 
    location /api/ {
        proxy_pass http://localhost:9002;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Add storage location for serving hero images
    location /storage/ {
        proxy_pass http://localhost:9002/storage/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Serve static image files                                                                                                                                                                                
    location /public/ {
        # Fix: This should be a path, not an HTTP URL
        alias http://localhost:9002/public/;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
        try_files $uri =404;
    }

    listen 443 ssl; # managed by Certbot                                                                                                                                                                      
    ssl_certificate /etc/letsencrypt/live/mythicalhero.me/fullchain.pem; # managed by Certbot                                                                                                                 
    ssl_certificate_key /etc/letsencrypt/live/mythicalhero.me/privkey.pem; # managed by Certbot                                                                                                               
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot                                                                                                                                     
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot                                                                                                                                       
}

server {
    if ($host = mythicalhero.me) {
        return 301 https://$host$request_uri;
    } # managed by Certbot                                                                                                                                                                                    

    server_name mythicalhero.me;
    listen 80;
    return 404; # managed by Certbot                                                                                                                                                                          
} 